#include <stdio.h>
#include <stdlib.h>

typedef int element;
typedef struct ListNode
{
	element data;
	struct ListNode * link;
} ListNode;
// 오류 처리 함수
void error(char *message)
{
	fprintf(stderr, "%s\n", message);
	exit(1);
}
// 처음 삽입 함수
void insert_first(ListNode **phead, ListNode *node)
{
	if (*phead == NULL)
	{
		*phead = node;
		node->link = node;
	}
	else
	{
		node->link = (*phead)->link;
		(*phead)->link = node;
	}
}
// 삽입 함수
void insert_last(ListNode **phead, ListNode *node)
{
	if (*phead == NULL)
	{
		*phead = node;
		node->link = node;
	}
	else
	{
		node->link = (*phead)->link;
		(*phead)->link = node;
		*phead = node;
	}
}
// 노드를 동적으로 생성하는 함수
ListNode *create_node(element data, ListNode* link)
{
	ListNode *new_node;
	new_node = (ListNode *)malloc(sizeof(ListNode));
	if (new_node == NULL) error("메모리 할당 에러");
	new_node->link = link;
	new_node->data = data;
	return(new_node);
}
// 리스트 항목 출력
void display(ListNode* head)
{
	ListNode *p;
	if (head == NULL) return;
	p = head;

	do
	{
		printf("%d->", p->data);
		p = p->link;
	}while (p != head);
}
// 주 함수
int main()
{
	ListNode *list1 = NULL;

	insert_first(&list1, create_node(10, NULL));
	insert_first(&list1, create_node(20, NULL));
	insert_last(&list1, create_node(30, NULL));
	display(list1);
	

}
