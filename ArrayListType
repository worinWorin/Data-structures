#include <stdio.h>
#include <stdlib.h>
#define MAX_LIST_SIZE 100

typedef int element;
typedef struct
{
	element list[MAX_LIST_SIZE];
	int length;
} ArrayListType;
// 에러 체크 함수
void error(char *message)
{
	fprintf(stderr, "%s\n",message);
	exit(1);
}
// 리스트 초기화 함수
void Init(ArrayListType* L)
{
	L->length = 0;
}
// 공백 검사
int is_empty(ArrayListType *L)
{
	return L->length == 0;
}
// 포화 검사
int is_full(ArrayListType* L)
{
	return L->length == MAX_LIST_SIZE;
}
// 리스트 출력
void display(ArrayListType* L)
{
	for (int i = 0; i < L->length; i++)
	{
		printf("%d\n", L->list[i]);
	}
}
// 삽입 함수
void Add(ArrayListType* L, int pos, element item)
{
	if (!is_full(L) && (pos >= 0) && (pos <= L->length))
	{
		for (int i = (L->length - 1); i >= pos; i--)
			L->list[i + 1] = L->list[i];

		L->list[pos] = item;
		L->length++;
	}
}
// 삭제함수
element Delete(ArrayListType *L, int pos)
{
	int i;
	element item;

	if (pos < 0 || pos >= L->length)
		error("위치 오류");
	item = L->list[pos];
	for (i = pos; i < (L->length - 1); i++)
		L->list[i] = L->list[i + 1];

	L->length--;
	return item;
}
// 리스트 요소 제거
void clear(ArrayListType *L)
{
	L->length = 0;
}
// 요소 위치 바꾸기
int replace(ArrayListType* L, int pos, element item)
{
	L->list[pos - 1] = item;
	return 0;
}
// 리스트의 길이를 구함
void get_length(ArrayListType* L)
{
	printf("List length = %d", L->length);
}
// 주함수
int main()
{
	ArrayListType list1;

	Init(&list1);			// 리스트 초기화
	
	Add(&list1, 0, 10);		// list1 -> 10 삽입
	Add(&list1, 0, 20);		// list1 -> 20 삽입
	Add(&list1, 0, 30);		// list1 -> 30 삽입
	display(&list1);		// list1 출력
	
	clear(&list1);
	printf("\n");
	display(&list1);

	printf("\n");
	Add(&list1, 0, 10);		// list1 -> 10 삽입
	Add(&list1, 0, 20);		// list1 -> 20 삽입
	Add(&list1, 0, 30);		// list1 -> 30 삽입
	display(&list1);

	printf("\n");
	replace(&list1, 1, 20);
	display(&list1);

	get_length(&list1);
}
